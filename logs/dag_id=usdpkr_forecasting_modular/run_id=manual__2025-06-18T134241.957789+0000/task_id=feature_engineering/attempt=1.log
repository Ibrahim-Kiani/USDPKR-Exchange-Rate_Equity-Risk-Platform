[2025-06-18T13:44:16.181+0000] {local_task_job_runner.py:120} INFO - ::group::Pre task execution logs
[2025-06-18T13:44:16.213+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: usdpkr_forecasting_modular.feature_engineering manual__2025-06-18T13:42:41.957789+00:00 [queued]>
[2025-06-18T13:44:16.223+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: usdpkr_forecasting_modular.feature_engineering manual__2025-06-18T13:42:41.957789+00:00 [queued]>
[2025-06-18T13:44:16.224+0000] {taskinstance.py:2306} INFO - Starting attempt 1 of 4
[2025-06-18T13:44:16.239+0000] {taskinstance.py:2330} INFO - Executing <Task(PythonOperator): feature_engineering> on 2025-06-18 13:42:41.957789+00:00
[2025-06-18T13:44:16.245+0000] {standard_task_runner.py:63} INFO - Started process 9021 to run task
[2025-06-18T13:44:16.248+0000] {standard_task_runner.py:90} INFO - Running: ['***', 'tasks', 'run', 'usdpkr_forecasting_modular', 'feature_engineering', 'manual__2025-06-18T13:42:41.957789+00:00', '--job-id', '801', '--raw', '--subdir', 'DAGS_FOLDER/usdpkr_forecasting_dag.py', '--cfg-path', '/tmp/tmplll3c0cl']
[2025-06-18T13:44:16.250+0000] {standard_task_runner.py:91} INFO - Job 801: Subtask feature_engineering
[2025-06-18T13:44:16.293+0000] {task_command.py:426} INFO - Running <TaskInstance: usdpkr_forecasting_modular.feature_engineering manual__2025-06-18T13:42:41.957789+00:00 [running]> on host 9c4806d77c92
[2025-06-18T13:44:16.382+0000] {taskinstance.py:2648} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='usdpkr_forecasting_modular' AIRFLOW_CTX_TASK_ID='feature_engineering' AIRFLOW_CTX_EXECUTION_DATE='2025-06-18T13:42:41.957789+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2025-06-18T13:42:41.957789+00:00'
[2025-06-18T13:44:16.383+0000] {taskinstance.py:430} INFO - ::endgroup::
[2025-06-18T13:44:16.395+0000] {transform.py:271} INFO - Loading DataFrame from path: /opt/***/data/raw/merged_data.csv
[2025-06-18T13:44:16.413+0000] {transform.py:274} INFO - Starting feature engineering. Input DataFrame shape: (246, 17)
[2025-06-18T13:44:16.414+0000] {transform.py:275} INFO - Input DataFrame columns: ['DATE', 'GOLD', 'FOREX_RESERVES', 'INFLATION_YOY', 'OIL', 'INTEREST_RATE', 'KSE100', 'USDPKR', 'M2', 'YEAR', 'MONTH', 'QUARTER', 'FOREX_RESERVES_naflag', 'INFLATION_YOY_naflag', 'INTEREST_RATE_naflag', 'KSE100_naflag', 'M2_naflag']
[2025-06-18T13:44:16.415+0000] {transform.py:276} INFO - Input DataFrame dtypes:
DATE                      object
GOLD                     float64
FOREX_RESERVES           float64
INFLATION_YOY            float64
OIL                      float64
INTEREST_RATE            float64
KSE100                   float64
USDPKR                   float64
M2                       float64
YEAR                       int64
MONTH                      int64
QUARTER                    int64
FOREX_RESERVES_naflag       bool
INFLATION_YOY_naflag        bool
INTEREST_RATE_naflag        bool
KSE100_naflag               bool
M2_naflag                   bool
dtype: object
[2025-06-18T13:44:16.416+0000] {transform.py:279} INFO - Converting DATE to datetime
[2025-06-18T13:44:16.420+0000] {transform.py:283} INFO - Creating time-based features
[2025-06-18T13:44:16.422+0000] {transform.py:289} INFO - Setting DATE as index and filtering years > 2004
[2025-06-18T13:44:16.427+0000] {transform.py:292} INFO - DataFrame shape after year filtering: (246, 16)
[2025-06-18T13:44:16.427+0000] {transform.py:295} INFO - Handling missing values and creating NA flags
[2025-06-18T13:44:16.429+0000] {transform.py:304} INFO - Creating cyclical month features
[2025-06-18T13:44:16.431+0000] {transform.py:309} INFO - Creating economic features
[2025-06-18T13:44:16.433+0000] {transform.py:315} INFO - Creating lag features
[2025-06-18T13:44:16.440+0000] {transform.py:325} INFO - Creating rolling statistics
[2025-06-18T13:44:16.445+0000] {transform.py:334} INFO - Resetting index
[2025-06-18T13:44:16.471+0000] {transform.py:344} INFO - Feature engineering complete. Final DataFrame shape: (234, 52)
[2025-06-18T13:44:16.472+0000] {transform.py:345} INFO - Final DataFrame columns: ['DATE', 'GOLD', 'FOREX_RESERVES', 'INFLATION_YOY', 'OIL', 'INTEREST_RATE', 'KSE100', 'USDPKR', 'M2', 'YEAR', 'MONTH', 'QUARTER', 'FOREX_RESERVES_naflag', 'INFLATION_YOY_naflag', 'INTEREST_RATE_naflag', 'KSE100_naflag', 'M2_naflag', 'MONTH_SIN', 'MONTH_COS', 'USDPKR_diff', 'REAL_INTEREST', 'OIL_IN_PKR', 'KSE100_lag1', 'KSE100_lag3', 'KSE100_lag12', 'INFLATION_YOY_lag1', 'INFLATION_YOY_lag3', 'INFLATION_YOY_lag12', 'INTEREST_RATE_lag1', 'INTEREST_RATE_lag3', 'INTEREST_RATE_lag12', 'USDPKR_lag1', 'USDPKR_lag3', 'USDPKR_lag12', 'OIL_lag1', 'OIL_lag3', 'OIL_lag12', 'FOREX_RESERVES_lag1', 'FOREX_RESERVES_lag3', 'FOREX_RESERVES_lag12', 'GOLD_lag1', 'GOLD_lag3', 'GOLD_lag12', 'M2_lag1', 'M2_lag3', 'M2_lag12', 'KSE100_roll_mean3', 'KSE100_roll_std3', 'OIL_roll_mean3', 'OIL_roll_std3', 'GOLD_roll_mean3', 'GOLD_roll_std3']
[2025-06-18T13:44:16.472+0000] {python.py:237} INFO - Done. Returned value was: /opt/***/data/raw/engineered_features.csv
[2025-06-18T13:44:16.473+0000] {taskinstance.py:441} INFO - ::group::Post task execution logs
[2025-06-18T13:44:16.492+0000] {taskinstance.py:1206} INFO - Marking task as SUCCESS. dag_id=usdpkr_forecasting_modular, task_id=feature_engineering, run_id=manual__2025-06-18T13:42:41.957789+00:00, execution_date=20250618T134241, start_date=20250618T134416, end_date=20250618T134416
[2025-06-18T13:44:16.541+0000] {local_task_job_runner.py:240} INFO - Task exited with return code 0
[2025-06-18T13:44:16.550+0000] {local_task_job_runner.py:222} INFO - ::endgroup::
